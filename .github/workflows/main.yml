name: CI
on:
  push:
    branches:
    - master
jobs:
  split-upm:
    name: split upm branch
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/checkout@v1
    - name: Create Version
      uses: paulhatch/semantic-version@v2
      with:
        # The branch to count commits on
        branch: "master"
        # The prefix to use to identify tags
        tag_prefix: ""
        # A string which, if present in a git commit, indicates that a change represents a major (breaking) change
        major_pattern: "(MAJOR)"
        # Same as above except indicating a minor change
        minor_pattern: "(MINOR)"
        # A string to determine the format of the version output
        format: "${major}.${minor}.${patch}"
      id: versioning
    
    - name: split upm branch
      run: |
        git branch -d upm &> /dev/null || echo upm branch not found
        git subtree split --prefix="$PKG_ROOT" --branch upm
        git checkout upm
        
        git config --global user.name 'github-bot'
        git config --global user.email 'github-bot@users.noreply.github.com'
        
        #if [[ -d "Samples" ]]; then
        #  git mv Samples Samples~
        #  rm -f Samples.meta
        #  git commit -am "fix: Samples => Samples~"
        #fi
        sed -i 's/**VERSION**/${{ steps.versioning.outputs.version }}/g' package.json
        git commit -am "fix: Package Version"
        
        git tag ${{ steps.versioning.outputs.version }} upm
        git push -f -u origin upm --tags
        
        git checkout master
        git tag ${{ steps.versioning.outputs.version }}-master master
        git push origin master --tags
      env:
        PKG_ROOT: Assets/SO Architecture

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.versioning.outputs.version }}
        release_name: Release ${{ steps.versioning.outputs.version }}
        draft: false
        prerelease: false
